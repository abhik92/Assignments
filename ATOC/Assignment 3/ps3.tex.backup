\documentclass[addpoints,12pt]{exam}
\printanswers
\usepackage{amsmath,amssymb,complexity,amsthm}
\usepackage{graphicx}

\newtheorem{theorem}{Theorem}
\newtheorem{corollary}[theorem]{Corollary}
\newtheorem{lemma}[theorem]{Lemma}
\newtheorem{observation}[theorem]{Observation}
\newtheorem{proposition}[theorem]{Proposition}
\newtheorem{claim}[theorem]{Claim}
\newtheorem{definition}[theorem]{Definition}

\renewcommand{\W}{\mathcal{W}}

\begin{document}
\hrule
\vspace{3mm}
\noindent
{\sf IITM-CS6014 : Advanced Theory of Computation  \hfill Author : Karthik Abinav S (CS10B057)}
\vspace{3mm}\\
\noindent
{\sf Problem Set \#3 }
\vspace{3mm}
\hrule


\begin{questions}
\question[10]
Recall
\[ K = \{ x~|~M_x \text{ halts on } x\}\] Prove the following.
\begin{parts}
\part $K$ is {\sc SD}-complete. 
\newline
\textbf{Answer :} \newline
To show this we have to show :
\begin{itemize}
 \item $K \in SD$
 \item $\forall L \in SD$ , $L \leq_{m} K$
\end{itemize}

To show the first part, we can re write $K$ as follows: \newline
$K$ = \{ $x$ : $\exists t$ $M_{x}$ halts on $x$ in $t$ steps \} \newline
Since ``$M_{x}$ halts on $x$ in $t$ steps'' is decidable, this shows that $K \in \Sigma_{1}$. \newline

To show the second part, it suffices to show that $HP\leq_{m}K$.(Because we know that $HP$ is $\Sigma_{1} - complete$) \newline
To show this consider the following machine $M'$ . \newline
$M'$ copies its input y on a seperate track. \newline
It simulates $M$ on $x$ . If $M$ halts on $x$ , then simulate $M_{y}$ on $y$. Accept , if $M_{y}$ halts on $y$. \newline

So the Language of $M'$ can be described as :
\[
    M' = \left\{ 
  \begin{array}{l l}
     K & \quad \text{if $M$ halts on $x$}\\
     \varnothing & \quad \text{if $M$ does not halt on $x$}\\
  \end{array} \right.
\]

This is the required reduction for $HP\leq_{m}K$ . \newline
Therefore , $K$ is $\Sigma_{1}$ complete.

\part Let $K^X = \{ x~|~ M_x^X \text{ is an oracle TM with oracle $X$ 
and $M_x^X$ halts on $x$} \}$. Show that $K^K$ is $\Sigma_2$-complete. 

% Question 1 part b

\textbf{Answer:}\newline
To show this we have to show :
\begin{itemize}
 \item $K^K \in \Sigma_{2}$
 \item $\forall L \in \Sigma_{2}$ , $L \leq_{m} K^K	$

\end{itemize}

Simulate input $x$ on $M_{x}^{K}$ . Whenever a query is needed, use the oracle $K$ provided to machine $M^{K}_{x}$ . The language accepted by this machine
is $K^K$ . And since , it is semi decidable with respect to a language in $\Sigma_{1}$ , therefore it is in $\Sigma_{2}$. \newline

To show that every language $L \in \Sigma_{2}$ , $L \leq_{m} K^K$, it suffices to show that $MP_{2} \leq_{m} K^K$(Because $MP_{2}$ is $\Sigma_{2}$ - complete).
Consider a machine $M$ which accepts $MP_{2}$ with an oracle access to $K$(Note from previous question that $K$ is $\Sigma_{1}$ - complete. \newline

Construct a machine $N$, which does the following : \newline
\begin{itemize}
 \item Runs $M$ on input $x$ with query to the oracle $K$. If it accpets, then run $M_{y}^{K}$ on input $y$. Whenever a query is needed , use the oracle from the
 machine $M$. 
 So the Language of $N$ can be described as :

 \[
    N = \left\{ 
  \begin{array}{l l}
     K^K & \quad \text{if $M^{K}$ accepts $x$}\\
     \varnothing & \quad \text{if $M^{K}$ does not accept  $x$}\\
  \end{array} \right.
\]
 
 This is the required reduction for $MP_{2} \leq_{m} K^K$ . \newline
 
 Therefore, $K^K$ is $\Sigma_{2}$ - complete.
 
\end{itemize}



\end{parts}

\question[10] A set $P$ is \textit{partially productive} if there is a partial recursive function(i.e. computed by a Turing machine $N$ - which need not be total) $\psi$ called the {\em productive function} such that:
\[ \forall x ~~\left( \mathcal{W}_x \subseteq P \implies N \textrm{ halts on $x$ } 
\&~~\psi(x) \in P \setminus \mathcal{W}_x \right) \]
Show that any productive set $P$ has an injective recursive productive function. \\ (Hint : First prove that it can be made recursive and then attempt on making it injective).

% Question 2
\textbf{Answer:}\newline


\question[5]
Prove that there must exist a recursive function such that $\{ \W_{f(n)} \}_{n \in \mathbb{N}}$ consists of precisely decidable sets.

%Question 3
\textbf{Answer:}\newline
Let $n_{0}$ be the encoding of the trivial turing machine which accepts all string in $\Sigma^{\ast}$. \newline
Consider the function $f(n) = n_{0}$, $\forall n \in N$. \newline
$\{ W_{f(n)} \}$ = $\Sigma^\ast$ for $\forall n \in N$ . Hence, this set has only decidable sets, for this particular recursive function.





\question[5]
A simple set is {\em effectively simple} if there is a recursive function $f$ such that:
\[ \forall n\in \mathbb{N} : \W_n \subseteq \overline{A} \implies |\W_n| \le f(n) \]
Show that Post's simple set is effectively simple. \\[2mm]
(Extra Credit) If a set $A$ is effectively simple, argue that $K \le_T A$. This justifies why Friedberg-Muchnik had to do a different construction. 
(Hint: Normal homework rules does not apply to this question. You can look up anywhere, but cite your sources. !).

\textbf{Answer:}\newline

\question[10]
Consider the following computational problems :
\begin{parts}
\part Given a Turing machine $M$, test if $L(M)$ is Productive.
\part Given a Turing machine $M$, test if $L(M)$ is Simple.
\end{parts}
Are they decidable? semi-decidable? \\[2mm]
(Extra Credit) Place them in the arithmetic hierarchy. \newline
\textbf{Answer(a)}\newline
\textbf{Answer(b)}\newline

\end{questions}
\end{document}
