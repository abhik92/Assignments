import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Set;

import javax.swing.RowFilter.Entry;

import MainPackage.AliasTable;
import MainPackage.ControlFlowNode;
import MainPackage.SymbolTable;

import syntaxtree.*;
import visitor.*;

class Main {
	public static void main(String[] args) throws FileNotFoundException {
		try {
			Node root = new microIRParser(new FileInputStream(
					"../../Tests/microIR/Factorial.microIR")).Goal();

			// Node root = new microIRParser(System.in).Goal();
			//root.accept(new ChangeLocalsToGlobal(), null);
			root.accept(new GJNoArguDepthFirst()); // Your assignment part is
			// invoked here.

			System.out.println("Program parsed successfully");
			
			Set<java.util.Map.Entry<Integer, ControlFlowNode>> e = SymbolTable.vertexToNode
					.entrySet();
			for (java.util.Map.Entry<Integer, ControlFlowNode> ss : e) {
				if (!(ss.getValue().used.size() == 0)) {
					System.out.print(ss.getKey() + " "
							+ ss.getValue().typeOfInstruction + " ");
					for (String sss : ss.getValue().used)
						System.out.print(sss + " ");

				} else
					System.out.print(ss.getKey() + " "
							+ ss.getValue().typeOfInstruction + " "
							+ ss.getValue().currentLabel + " ");
				for (Integer nn : ss.getValue().pre) {
					System.out.print(nn + " ");
				}
				System.out.println();
			}

		} catch (ParseException e) {
			System.out.println(e.toString());
		}
	}
}
