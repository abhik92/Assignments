/*
 * Author : Karthik Abinav
 * Roll Number : CS10B057
 * References: Liveness Analysis , Linear Scan Algorithm (Class Slides,Wikipedia) 
 */

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Set;
import java.util.Vector;

import MainPackage.AliasTable;
import MainPackage.ControlFlowNode;
import MainPackage.LiveRange;
import MainPackage.SymbolTable;

import syntaxtree.*;
import visitor.*;

class Main {
	public static void main(String[] args) throws FileNotFoundException {
		try {
			Node root = new microIRParser(new FileInputStream(
					"../../Tests/microIR/Factorial.microIR")).Goal();

			// Node root = new microIRParser(System.in).Goal();
			// root.accept(new ChangeLocalsToGlobal(), null);
			root.accept(new GJNoArguDepthFirst()); // Your assignment part is
			// invoked here.

			SymbolTable.connectLabels();
			SymbolTable.getSuccessors();
			Vector<ControlFlowNode> A = new Vector<String>();
			ControlFlowNode F = new ControlFlowNode();F.used.add("hi");
			for (String s : A) {
				s = "abinav";
			}
			System.out.println(A);

			SymbolTable.populateNodes();
			SymbolTable.livenessAnalysis();
			// SymbolTable.getLiveRanges();

			System.out.println("Program parsed successfully");

			/*
			 * Set<java.util.Map.Entry<ControlFlowNode, Integer>> e =
			 * SymbolTable.nodeToVertex .entrySet(); for
			 * (java.util.Map.Entry<ControlFlowNode, Integer> ss : e) {
			 * System.out.print(ss.getValue() + " " +
			 * ss.getKey().typeOfInstruction + " "); for (String nn :
			 * ss.getKey().liveIn) { System.out.print(nn + " "); }
			 * System.out.println(); }
			 * 
			 * Set<java.util.Map.Entry<String, LiveRange>> e1 =
			 * SymbolTable.liveRanges .entrySet();
			 * 
			 * for (java.util.Map.Entry<String, LiveRange> t : e1) {
			 * System.out.println(t.getKey() + " " + t.getValue().start + " " +
			 * t.getValue().end); }
			 */

		} catch (ParseException e) {
			System.out.println(e.toString());
		}
	}
}
